<%- include('partials/_header.ejs') %>
<script>
    const urlArray = window.location.pathname.split('/');
    const userType = urlArray[2];
    const userId = urlArray[3];
    const classId = urlArray[4];
</script>
<%- include('partials/_navBar.ejs') %>
<link rel="stylesheet" href="/css/classRoomPeopleCSS.css">
<div <% if(instruct){ %>id="nonFocusSearch"<% } %> style="transition: visibility 0.8s, opacity 0.8s linear;">
    <nav class="navbar navbar-expand-lg navbar-dark bg-secondary pt-0 pb-0">
        <ul class="nav navbar-nav mr-auto ml-auto mt-0 mb-0">
            <li class="nav-item">
                <button class="btn btn-dark h-2" style="height: 50px; width: 200px; border-radius: 0;"
                        onclick="location.href='<%= `/classroom/${idType}/${userId}/${classId}/work` %>'">Work
                </button>
            </li>
            <li class="nav-item">
                <button class="btn btn-secondary h-2" style="height: 50px; width: 200px; border-radius: 0;"
                        onclick="location.href='<%= `/classroom/${idType}/${userId}/${classId}/people` %>'">People
                </button>
            </li>
        </ul>
    </nav>
    <div class="container mt-5">
        <% if(instruct) {%>
        <div class="row">
            <div class="col-md-12">
                <button class="btn bg-dark text-light" style="width: 100%; height: 6vh;" onclick="location.href='/classroom/<%= idType %>/<%= userId %>/<%= classId %>/work/add'">+ Add Assignment</button>
            </div>
        </div>
        <%}%>
        <div class="mt-3" id="showAssignments">
            
        </div>
    </div>
</div>
<% if(instruct){ %>
    <%- include('partials/_blurredSearch.html') %>
<% } %>
<script src="/socket.io/socket.io.js"></script>
<script src='/js/clientSessions.js'></script>
<script>
    assignmentGet = io();
    const showBox = document.getElementById('showAssignments');
    assignmentGet.emit('getAssignments', {classId : classId});
    assignmentGet.on('getAssignmentsAnswer', (data) => {
        if(data[0] === undefined){
            showBox.innerHTML = "<div class='text-center'>no assignments to show</div>";
        }else{
            data = data.reverse();
            data.forEach(a => {
                let row = document.createElement('div');
                row.classList.add("row");
                let column = document.createElement('div');
                column.classList.add("col-md-12");
                column.classList.add("card");
                column.classList.add("bg-dark");
                column.classList.add("text-white");
                let cardBody = document.createElement('div');
                cardBody.classList.add('card-body');
                let titleTag = document.createElement('h4');
                titleTag.classList.add("card-title");
                titleTag.innerText = a.title;
                cardBody.appendChild(titleTag);
                if(a.note){
                    let descriptionTag = document.createElement('p');
                    descriptionTag.classList.add('card-description');
                    descriptionTag.innerHTML = a.note;
                    cardBody.appendChild(descriptionTag);
                }
                if(a.meetCode){
                    let meetTag = document.createElement('p');
                    meetTag.classList.add('btn');
                    meetTag.classList.add('btn-success');
                    meetTag.innerHTML = `The <i class="fa fa-google"></i> meet code provided is ${a.meetCode}`
                    cardBody.appendChild(meetTag);
                }
                if(a.fileData){
                    let announceTag = document.createElement('h4');
                    announceTag.classList.add('text-muted');
                    announceTag.innerText = 'Attachments';
                    cardBody.appendChild(announceTag);
                    let flexCards = document.createElement('div');
                    flexCards.classList.add('d-flex');
                    flexCards.classList.add('align-content-start');
                    flexCards.classList.add('flex-wrap');
                    a.fileData.forEach(file => {
                        let attachementTag = document.createElement('div');
                        attachementTag.classList.add('card');
                        attachementTag.classList.add('text-white');
                        attachementTag.classList.add('bg-secondary'); 
                        attachementTag.classList.add('mb-3');
                        attachementTag.classList.add('mr-3');
                        attachementTag.style.maxWidth = '18rem';
                        attachementTag.innerHTML = `<div class="card-body"><h5 class="card-title">${file}</h5><a href="/classroom/${userType}/${userId}/${classId}/uploads/${file}" class="btn btn-primary">Open</a></div>`
                        flexCards.appendChild(attachementTag);
                    })
                    cardBody.appendChild(flexCards);
                }
                column.appendChild(cardBody);
                row.appendChild(column);
                showBox.appendChild(row);
            });
        }
    })
</script>
<%- include('partials/_footer.ejs') %>